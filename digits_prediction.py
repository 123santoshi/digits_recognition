# -*- coding: utf-8 -*-
"""digits_prediction

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Ph_q1GvfvZPKYSzav_E19rDxzYTS1FEx

**INSTALLING LIBRARIES**
"""

!pip install scikit-learn
!pip install matplotlib

""" ** IMPORTING LIBRARIES**"""

from matplotlib import pyplot as plt
from sklearn.datasets import load_digits

d=load_digits()            #loading dataset from sklearn module
dir(d)

"""**SUMMARIZE THE DATA**"""

d.data          #data contains fig metrics

d.data[0]

d.images[1:5]              #images will be displayed in text format

plt.gray()                         #to display images in img format
for i in range(1,6):
    plt.matshow(d.images[i])

d.target[0:16]           #correponding image number is stored in target value

"""**TRAINING THE DATA**"""

from sklearn.model_selection import train_test_split
x_train,x_test,y_train,y_test=train_test_split(d.data,d.target,test_size=0.2)
from sklearn.linear_model import LogisticRegression
model=LogisticRegression()
model.fit(x_train,y_train)

"""**ACCURACY**"""

score1=model.score(x_test,y_test)          #to check accuracy of our model
score1=score1*100                         #convert accuracy into percentage
score1

"""**TESTING**"""

n=int(input("enter image number which we want to preidtc=="))
plt.matshow(d.images[n])            #if u want to check the number present in image 67

d.target[n]                        #corresponding target value

model.predict([d.data[n]])           #if u want to check the number present in image 67

"""**CONFUSION MATRIX**"""

ypredict=model.predict(x_test)                          
from sklearn.metrics import confusion_matrix
confusionmatrix=confusion_matrix(y_test,ypredict)
confusionmatrix

import seaborn as sn                  
sn.heatmap(confusionmatrix,annot=True)
plt.xlabel("predicted value")
plt.ylabel("actual value")